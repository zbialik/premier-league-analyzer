# COPIED FROM /etc/profile
if [ -z "$PS1" ]; then
   return
fi
PS1='\h:\W \u\$ '
shopt -s checkwinsize
[ -r "/etc/bashrc_$TERM_PROGRAM" ] && . "/etc/bashrc_$TERM_PROGRAM"

# MY ENV VARIABLES
export PATH=${HOME}/bin:${PATH}
export PATH=${HOME}/bin/homebrew/bin:${PATH}
export PATH=${KREW_ROOT:-$HOME/.krew}/bin:$PATH
export GOPATH=${HOME}/go
export PATH=${GOPATH}/bin:${PATH}
export HOMEBREW_CASK_OPTS="--appdir=~/Applications"
export GPG_TTY=$(tty)

# required for using AWS CLI now that Netskope is installed on my machine
export REQUESTS_CA_BUNDLE='/Library/Application Support/Netskope/STAgent/data/nscacert.pem'

# MY ALIASES
alias sed=gsed
alias ll='ls -lah'
alias k=kubectl
alias kks='kubectl -n kube-system'
alias km='kubectl -n monitoring'
alias kl='kubectl -n logging'
alias tf=terraform
alias h=helm
alias python=python3
alias pip='python3 -m pip'
alias codesettings="code ${HOME}/Library/Application\ Support/Code/User/settings.json"

# MY FUNCTIONS
kconfig(){
   kubectl cluster-info --kubeconfig "${HOME}/.kube/${1}"
   RET=$?
   if [ $RET -ne 0 ]; then
      echo "cannot talk to k8s api with provided kubeconfig"
   else
      export KUBECONFIG="${HOME}/.kube/${1}"
   fi
}

pyvenv(){
   action=${1}
   case "$1" in
   init) 
      echo "initializing python venv ${2}"
      python -m venv "${HOME}/venv/${2}"
      RET=$?
      if [[ $RET == "0" ]]; then
         echo "activate venv by running --> pyvenv activate ${2}"
      fi
      ;;
   activate)
      echo "activating python venv ${2}"
      source "${HOME}/venv/${2}/bin/activate"
      if [ $RET -ne 0 ]; then
         echo "make sure venv has already been initialized -- try running: pyvenv init ${2}"
      else
         export KUBECONFIG="${HOME}/.kube/${1}"
      fi
      ;;
   *)
      echo "ERROR: pyvenv accepts 2 args where first arg must be either 'init' or 'activate'"
      ;;
   esac
}
